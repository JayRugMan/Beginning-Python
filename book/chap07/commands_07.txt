### Chapter 7, More Abstraction


# Polymorphism and Methods
>>> from random import choice
>>> x = choice(['Hello, world!', [1, 2, 'e', 'e', 4]])
>>> x.count('e')
2

>>> 1+2
3
>>> 'Fish' + 'license'
'Fishlicense'
>>>
>>> def add(x, y):
...     return x+y
...
>>> add(1, 2)
3
>>> add('Fish', 'license')
'Fishlicense'

>>> def length_message(x):
...     print('The length of {} is {}'.format(repr(x), len(x)))
...
>>> length_message('Fnord')
The length of 'Fnord' is 5
>>> length_message([1, 2, 3])
The length of [1, 2, 3] is 3


# Making Your Own Classes
>>> class Person:
...     def setName(self, name):
...             self.name = name
...     def getName(self):
...             return self.name
...     def greet(self):
...             print("Hello, world! I'm {}.".format(self.name))
...
>>> foo = Person()
>>> bar = Person()
>>> foo.setName('Luke Skywalker')
>>> bar.setName('Anakin Skywalker')
>>> foo.greet()
Hello, world! I'm Luke Skywalker.
>>> bar.greet()
Hello, world! I'm Anakin Skywalker.
>>> foo.name
'Luke Skywalker'
>>> bar.name = 'Yoda'
>>> bar.greet()
Hello, world! I'm Yoda.
>>> Person.greet(foo)
Hello, world! I'm Luke Skywalker.

# Attributes, Functions, and Methods
