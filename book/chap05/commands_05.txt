A List of noteworthy commands from each chapter (starting with chapter 5):

### Chapter 5 - Conditionals, Loops, and Some Other Statements ###

# Two lines of code for one line of output
print('Hello, ', end='')
print('world!')

# Importing as something else
from math import sqrt as squareRoot

# Sequence unpacking and switching variable assignments
>>> x, y, z = 1, 2, 3
>>> print(x, y, z)
1 2 3
>>> x, y = y, x
>>> print(x, y, z)
2 1 3
>>> values = 1, 2, 3
>>> values
(1, 2, 3)
>>> x, y, z = values
>>> print(x, y, z)
1 2 3
>>> scoundrel = {'name': 'Robin', 'girlfriend': 'Marion'}
>>> key, value = scoundrel.popitem()
>>> scoundrel
{'name': 'Robin'}
>>> key
'girlfriend'
>>> value
'Marion'

# Augmented assignments
>>> fnord = 'foo'
>>> fnord += 'bar'
>>> fnord *= 2
>>> fnord
'foobarfoobar'

# Booleans
>>> True + False + 42
43
>>> bool('I think, therefore I am')
True
>>> bool('')
False
>>> bool(42)
True
>>> bool(0)
False
>>> name = input('Please enter your name: ') or '<unknown>'
Please enter your name:
>>> name
'<unknown>'
>>> x = [1, 2, 3]
>>> y = [2, 4]
>>> x is not y
True
>>> del x[2]
>>> y[1] = 1
>>> y.reverse()
>>> x == y
True
>>> x is y
False
>>> number = int(input('Enter a number between 1 and 10: '))
Enter a number between 1 and 10: 4
>>> if 1 <= number <= 10:
...     print('Thank you')
... else:
...     print('Nice Try')
...
Thank you

# Assertions
>>> age = 10
>>> assert 0 < age < 100, 'The age must be realistic'
>>> age = -1
>>> assert 0 < age < 100, 'The age must be realistic'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AssertionError: The age must be realistic


# iterate over key/value pairs
for key, value in d.items():
    print('{} corresponds to {}'.format(key, value))

x corresponds to 1
y corresponds to 2
z corresponds to 3

# Parallel Iteration
>>> names = ['anne', 'beth', 'george', 'damon']
>>> ages = [12, 45, 32, 102]
>>> for name, age, in zip(names, ages):
...     print('{} is {} years old.'.format(name, age))
...
anne is 12 years old.
beth is 45 years old.
george is 32 years old.
damon is 102 years old.

# Numbered Iteration
>>> strings = ['xxx', 'jaxxx', 'jason', 'Elijah', 'Isaiah']
>>> for index, string in enumerate(strings):
...     if 'xxx' in string:
...             strings[index] = '[censored]'
...
>>> strings
['[censored]', '[censored]', 'jason', 'Elijah', 'Isaiah']
>>> names = ['jason', 'kara', 'isaiah', 'eli']
>>> for list_num, name in enumerate(names, 1):
...     print('{} - {}'.format(list_num, name))
...
1 - jason
2 - kara
3 - isaiah
4 - eli
